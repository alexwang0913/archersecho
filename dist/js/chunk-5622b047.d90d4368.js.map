{"version":3,"sources":["webpack:///./src/assets/images/pages/login.png","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./src/views/auth/Login.vue?fa74","webpack:///src/views/auth/Login.vue","webpack:///./src/views/auth/Login.vue?5f6d","webpack:///./src/views/auth/Login.vue","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/utils/index.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js"],"names":["module","exports","__webpack_require__","p","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","flags","f","RegExp","prototype","configurable","get","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","slot","src","alt","_v","icon","icon-pack","label-placeholder","danger","validate","username","danger-text","model","value","user","callback","$$v","$set","expression","type","password","checkBox1","to","failType","color","title","active","_s","remainCount","_e","on","click","onClickLogin","position","getGoogleAuth","staticRenderFns","Loginvue_type_script_lang_js_","data","value1","value2","loginFail","methods","axios_default","a","then","response","console","log","window","open","catch","err","_onClickLogin","Object","asyncToGenerator","regeneratorRuntime","mark","_callee","_ref","status","attemptCount","wrap","_context","prev","next","validateForm","abrupt","auth","login","sent","concat","isActive","$router","path","utils","name","userId","profileUrl","stop","apply","arguments","auth_Loginvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","anObject","$flags","DESCRIPTORS","TO_STRING","$toString","define","fn","call","source","R","undefined","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","c","rt","abs","isNaN","floor","LN2","core","$JSON","JSON","stringify","it","global","base64","ieee754","isArray","typedArraySupport","__proto__","foo","subarray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","isnan","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","equals","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","dst","saveToStorage","encoded","encodeURIComponent","_home_ubuntu_Desktop_archersecho_new_webpage_node_modules_babel_runtime_corejs2_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","localStorage","setItem"],"mappings":"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","file":"js/chunk-5622b047.d90d4368.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/login.f7ff04a7.png\";","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"h-screen flex w-full bg-img\"},[_c('div',{staticClass:\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 mx-auto self-center\"},[_c('vx-card',[_c('div',{staticClass:\"full-page-bg-color\",attrs:{\"slot\":\"no-body\"},slot:\"no-body\"},[_c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col hidden sm:hidden md:hidden lg:block lg:w-1/2 mx-auto self-center\"},[_c('img',{staticClass:\"mx-auto\",attrs:{\"src\":require(\"@/assets/images/pages/login.png\"),\"alt\":\"login\"}})]),_c('div',{staticClass:\"vx-col sm:w-full md:w-full lg:w-1/2 mx-auto self-center bg-white\"},[_c('div',{staticClass:\"p-8\"},[_c('div',{staticClass:\"vx-card__title mb-8\"},[_c('h4',{staticClass:\"mb-4\"},[_vm._v(\"Login\")]),_c('p',[_vm._v(\"Welcome back, please login to your account.\")])]),_c('vs-input',{staticClass:\"w-full mb-6 no-icon-border\",attrs:{\"icon\":\"icon icon-user\",\"icon-pack\":\"feather\",\"label-placeholder\":\"Username\",\"danger\":_vm.validate.username,\"danger-text\":\"Username required\"},model:{value:(_vm.user.userId),callback:function ($$v) {_vm.$set(_vm.user, \"userId\", $$v)},expression:\"user.userId\"}}),_c('vs-input',{staticClass:\"w-full mb-4 no-icon-border\",attrs:{\"type\":\"password\",\"icon\":\"icon icon-lock\",\"icon-pack\":\"feather\",\"label-placeholder\":\"Password\",\"danger\":_vm.validate.password,\"danger-text\":\"Password required.\"},model:{value:(_vm.user.password),callback:function ($$v) {_vm.$set(_vm.user, \"password\", $$v)},expression:\"user.password\"}}),_c('div',{staticClass:\"flex flex-wrap justify-between my-5\"},[_c('vs-checkbox',{staticClass:\"mb-3\",model:{value:(_vm.checkBox1),callback:function ($$v) {_vm.checkBox1=$$v},expression:\"checkBox1\"}},[_vm._v(\"Remember Me\")]),_c('router-link',{attrs:{\"to\":\"/pages/forgot-password\"}},[_vm._v(\"Forgot Password?\")])],1),(_vm.loginFail)?_c('div',[(_vm.failType === 1)?_c('vs-alert',{staticClass:\"mb-6\",attrs:{\"color\":\"danger\",\"title\":\"Danger\",\"active\":\"true\"}},[_vm._v(\"\\n                  Username or password is incorrect.\\n                  \"),_c('br'),_vm._v(\"\\n                  \"+_vm._s(_vm.remainCount)+\" times remaing\\n                \")]):_vm._e(),(_vm.failType === 2)?_c('vs-alert',{staticClass:\"mb-6\",attrs:{\"color\":\"danger\",\"title\":\"Danger\",\"active\":\"true\"}},[_vm._v(\"\\n                  You failed 3 times.\\n                  \"),_c('br'),_vm._v(\"You can try again after 15mins.\\n                \")]):_vm._e(),(_vm.failType === 3)?_c('vs-alert',{staticClass:\"mb-6\",attrs:{\"color\":\"danger\",\"title\":\"Danger\",\"active\":\"true\"}},[_vm._v(\"This user is not activated.\")]):_vm._e()],1):_vm._e(),_c('vs-button',{attrs:{\"type\":\"border\",\"to\":\"/register\"}},[_vm._v(\"Register\")]),_c('vs-button',{staticClass:\"float-right\",on:{\"click\":_vm.onClickLogin}},[_vm._v(\"Login\")]),_c('vs-divider',{staticClass:\"my-8\",attrs:{\"position\":\"center\"}}),_c('div',{staticClass:\"social-login mb-4 flex flex-wrap justify-between\"},[_c('span',[_vm._v(\"Or Login With\")]),_c('div',{staticClass:\"social-login-buttons flex\"},[_c('vs-button',{staticClass:\"px-8\",attrs:{\"color\":\"success\"},on:{\"click\":_vm.getGoogleAuth}},[_c('font-awesome-icon',{attrs:{\"icon\":['fab', 'google']}})],1)],1)])],1)])])])])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\r\n\tFile Name: Login.vue\r\n\tDescription: Login Page\r\n\t----------------------------------------------------------------------------------------\r\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n\tVersion: 1.1\r\n\tAuthor: Pixinvent\r\n\tAuthor URL: hhttp://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div class=\"h-screen flex w-full bg-img\">\r\n    <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 mx-auto self-center\">\r\n      <vx-card>\r\n        <div slot=\"no-body\" class=\"full-page-bg-color\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col hidden sm:hidden md:hidden lg:block lg:w-1/2 mx-auto self-center\">\r\n              <img src=\"@/assets/images/pages/login.png\" alt=\"login\" class=\"mx-auto\">\r\n            </div>\r\n            <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 mx-auto self-center bg-white\">\r\n              <div class=\"p-8\">\r\n                <div class=\"vx-card__title mb-8\">\r\n                  <h4 class=\"mb-4\">Login</h4>\r\n                  <p>Welcome back, please login to your account.</p>\r\n                </div>\r\n                <vs-input\r\n                  icon=\"icon icon-user\"\r\n                  icon-pack=\"feather\"\r\n                  label-placeholder=\"Username\"\r\n                  v-model=\"user.userId\"\r\n                  class=\"w-full mb-6 no-icon-border\"\r\n                  :danger=\"validate.username\"\r\n                  danger-text=\"Username required\"\r\n                />\r\n                <vs-input\r\n                  type=\"password\"\r\n                  icon=\"icon icon-lock\"\r\n                  icon-pack=\"feather\"\r\n                  label-placeholder=\"Password\"\r\n                  v-model=\"user.password\"\r\n                  class=\"w-full mb-4 no-icon-border\"\r\n                  :danger=\"validate.password\"\r\n                  danger-text=\"Password required.\"\r\n                />\r\n                <div class=\"flex flex-wrap justify-between my-5\">\r\n                  <vs-checkbox v-model=\"checkBox1\" class=\"mb-3\">Remember Me</vs-checkbox>\r\n                  <router-link to=\"/pages/forgot-password\">Forgot Password?</router-link>\r\n                </div>\r\n\r\n                <div v-if=\"loginFail\">\r\n                  <vs-alert\r\n                    class=\"mb-6\"\r\n                    color=\"danger\"\r\n                    title=\"Danger\"\r\n                    active=\"true\"\r\n                    v-if=\"failType === 1\"\r\n                  >\r\n                    Username or password is incorrect.\r\n                    <br>\r\n                    {{remainCount}} times remaing\r\n                  </vs-alert>\r\n                  <vs-alert\r\n                    class=\"mb-6\"\r\n                    color=\"danger\"\r\n                    title=\"Danger\"\r\n                    active=\"true\"\r\n                    v-if=\"failType === 2\"\r\n                  >\r\n                    You failed 3 times.\r\n                    <br>You can try again after 15mins.\r\n                  </vs-alert>\r\n                  <vs-alert\r\n                    class=\"mb-6\"\r\n                    color=\"danger\"\r\n                    title=\"Danger\"\r\n                    active=\"true\"\r\n                    v-if=\"failType === 3\"\r\n                  >This user is not activated.</vs-alert>\r\n                </div>\r\n                <vs-button type=\"border\" to=\"/register\">Register</vs-button>\r\n                <vs-button class=\"float-right\" @click=\"onClickLogin\">Login</vs-button>\r\n\r\n                <vs-divider position=\"center\" class=\"my-8\"></vs-divider>\r\n\r\n                <div class=\"social-login mb-4 flex flex-wrap justify-between\">\r\n                  <span>Or Login With</span>\r\n                  <div class=\"social-login-buttons flex\">\r\n                    <!-- <vs-button\r\n                      color=\"#1551b1\"\r\n                      class=\"mr-4 px-8\"\r\n                      icon=\"icon icon-facebook\"\r\n                      icon-pack=\"feather\"\r\n                    ></vs-button>\r\n                    <vs-button\r\n                      color=\"#00aaff\"\r\n                      class=\"mr-4 px-8\"\r\n                      icon=\"icon icon-twitter\"\r\n                      icon-pack=\"feather\"\r\n                    ></vs-button>-->\r\n                    <vs-button color=\"success\" class=\"px-8\" @click=\"getGoogleAuth\">\r\n                      <font-awesome-icon :icon=\"['fab', 'google']\"></font-awesome-icon>\r\n                    </vs-button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vx-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport authApi from \"../../api/auth\";\r\nimport axios from \"axios\";\r\nimport { saveToStorage } from \"../../utils\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      value1: \"\",\r\n      value2: \"\",\r\n      checkBox1: false,\r\n      user: {},\r\n      validate: {},\r\n      loginFail: false,\r\n      failType: 0,\r\n      remainCount: 0\r\n    };\r\n  },\r\n  methods: {\r\n    getGoogleAuth() {\r\n      axios\r\n        .get(\"http://localhost:3000/api/auth/google/login\")\r\n        .then(response => {\r\n          console.log(\"__response\");\r\n          console.log(response);\r\n          console.log(response.data);\r\n\r\n          window.open(response.data);\r\n        })\r\n        .catch(err => {\r\n          console.log(\"__error\");\r\n          console.log(err);\r\n        });\r\n      // console.log(\"__Google auth\");\r\n    },\r\n    async onClickLogin() {\r\n      if (!this.validateForm()) return;\r\n      const { status, data, attemptCount } = await authApi.login(this.user);\r\n      console.log(`Status: ${status}`);\r\n      console.log(`AttemptCount: ${attemptCount}`);\r\n      console.log(\"data\");\r\n      console.log(data);\r\n      if (status === 301) {\r\n        this.loginFail = true;\r\n        this.remainCount = 3 - attemptCount;\r\n        this.failType = 1;\r\n      } else if (status === 300) {\r\n        this.loginFail = true;\r\n        this.failType = 2;\r\n      } else if (status === 200) {\r\n        if (!data.isActive) {\r\n          this.loginFail = true;\r\n          this.failType = 3;\r\n        } else {\r\n          this.$router.push({ path: \"/\" });\r\n          saveToStorage(\"user\", {\r\n            name: data.name,\r\n            userId: data.userId,\r\n            profileUrl: data.profileUrl\r\n          });\r\n        }\r\n      }\r\n    },\r\n    validateForm() {\r\n      this.validate = {};\r\n      if (!this.user.userId || this.user.userId === \"\") {\r\n        this.validate.username = true;\r\n        return false;\r\n      }\r\n      if (!this.user.password || this.user.password === \"\") {\r\n        this.validate.password = true;\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Login.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Login.vue?vue&type=template&id=7abfe888&\"\nimport script from \"./Login.vue?vue&type=script&lang=js&\"\nexport * from \"./Login.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","const saveToStorage = (name, data) => {\n  const encoded = encodeURIComponent(\n    Buffer.from(JSON.stringify(data)).toString(\"base64\")\n  );\n  localStorage.setItem(name, encoded);\n};\n\nconst getFromStorage = name => {\n  // console.log('Get Auth')\n  const encoded = localStorage.getItem(name);\n  if (encoded) {\n    const decoded = JSON.parse(\n      Buffer.from(decodeURIComponent(encoded), \"base64\")\n    );\n    return decoded;\n  }\n};\n\nexport { saveToStorage, getFromStorage };\n","module.exports = require(\"core-js/library/fn/json/stringify\");"],"sourceRoot":""}