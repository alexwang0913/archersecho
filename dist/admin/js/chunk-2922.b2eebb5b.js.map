{"version":3,"sources":["webpack:///./src/api/index.js","webpack:///./node_modules/vue-slick/slickCarousel.vue?f01f","webpack:///node_modules/vue-slick/slickCarousel.vue","webpack:///./node_modules/vue-slick/slickCarousel.vue?53bb","webpack:///./node_modules/vue-slick/slickCarousel.vue","webpack:///./node_modules/slick-carousel/slick/slick.js"],"names":["__webpack_exports__","axios__WEBPACK_IMPORTED_MODULE_0___default","a","create","baseURL","render","_vm","this","_h","$createElement","_c","_self","_t","staticRenderFns","window","__webpack_require__","slickCarouselvue_type_script_lang_js_","props","options","type","Object","default","mounted","destroyed","jquery_default","$el","slick","methods","$slick","on","onAfterChange","onBeforeChange","onBreakpoint","onDestroy","onEdge","onInit","onReInit","onSetPosition","onSwipe","onLazyLoaded","onLazyLoadError","destroy","off","reSlick","next","prev","pause","play","goTo","index","dontAnimate","currentSlide","add","element","addBefore","remove","removeBefore","filter","filterData","unfilter","getOption","option","setOption","value","refresh","setPosition","event","$emit","nextSlide","breakpoint","direction","image","imageSource","vue_slick_slickCarouselvue_type_script_lang_js_","component","componentNormalizer","__file","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","apply","exports","undefined","module","$","Slick","instanceUid","settings","dataSettings","_","defaults","accessibility","adaptiveHeight","appendArrows","appendDots","arrows","asNavFor","prevArrow","nextArrow","autoplay","autoplaySpeed","centerMode","centerPadding","cssEase","customPaging","slider","i","text","dots","dotsClass","draggable","easing","edgeFriction","fade","focusOnSelect","focusOnChange","infinite","initialSlide","lazyLoad","mobileFirst","pauseOnHover","pauseOnFocus","pauseOnDotsHover","respondTo","responsive","rows","rtl","slide","slidesPerRow","slidesToShow","slidesToScroll","speed","swipe","swipeToSlide","touchMove","touchThreshold","useCSS","useTransform","variableWidth","vertical","verticalSwiping","waitForAnimate","zIndex","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","$dots","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","scrolling","slideCount","slideWidth","$slideTrack","$slides","sliding","slideOffset","swipeLeft","swiping","$list","touchObject","transformsEnabled","unslicked","extend","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","cssTransitions","focussed","interrupted","hidden","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowWidth","windowTimer","data","originalSettings","document","mozHidden","webkitHidden","autoPlay","proxy","autoPlayClear","autoPlayIterator","changeSlide","clickHandler","selectHandler","swipeHandler","dragHandler","keyHandler","htmlExpr","registerBreakpoints","init","prototype","activateADA","find","attr","aria-hidden","tabindex","addSlide","slickAdd","markup","unload","length","appendTo","insertBefore","eq","insertAfter","prependTo","children","detach","append","each","reinit","animateHeight","targetHeight","outerHeight","animate","height","animateSlide","targetLeft","callback","animProps","left","top","animStart","duration","step","now","Math","ceil","css","complete","call","applyTransition","setTimeout","disableTransition","getNavTarget","not","target","slideHandler","transition","setInterval","clearInterval","slideTo","buildArrows","addClass","removeClass","removeAttr","test","aria-disabled","buildDots","dot","getDotCount","first","buildOut","wrapAll","parent","wrap","setupInfinite","updateDots","setSlideClasses","buildRows","b","c","newSlides","numOfSlides","originalSlides","slidesPerSection","createDocumentFragment","createElement","row","get","appendChild","empty","width","display","checkResponsive","initial","forceUpdate","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","innerWidth","min","hasOwnProperty","unslick","trigger","indexOffset","unevenOffset","$target","currentTarget","is","preventDefault","closest","message","checkNavigable","navigables","prevNavigable","getNavigableIndexes","n","cleanUpEvents","interrupt","visibility","cleanUpSlideEvents","orientationChange","resize","cleanUpRows","stopImmediatePropagation","stopPropagation","fadeSlide","slideIndex","opacity","fadeSlideOut","filterSlides","slickFilter","focusHandler","$sf","getCurrent","slickCurrentSlide","breakPoint","counter","pagerQty","getLeft","verticalHeight","targetSlide","coef","verticalOffset","floor","offsetLeft","outerWidth","slickGetOption","max","indexes","push","getSlick","getSlideCount","slidesTraversed","swipedSlide","centerOffset","abs","slickGoTo","parseInt","creation","hasClass","setProps","startLoad","loadSlider","initializeEvents","updateArrows","initADA","numDotGroups","tabControlIndexes","val","slideControlIndex","indexOf","role","id","ariaButtonControl","aria-describedby","mappedSlideIndex","aria-controls","aria-label","aria-selected","end","initArrowEvents","initDotEvents","initSlideEvents","action","initUI","show","tagName","match","keyCode","loadRange","cloneRange","rangeStart","rangeEnd","loadImages","imagesScope","imageSrcSet","imageSizes","imageToLoad","onload","onerror","src","slice","prevSlide","progressiveLazyLoad","slickNext","slickPause","slickPlay","postSlide","$currentSlide","focus","slickPrev","tryCount","$imgsToLoad","initializing","lastVisibleIndex","currentBreakpoint","l","responsiveSettings","splice","sort","clearTimeout","windowDelay","removeSlide","slickRemove","removeAll","setCSS","position","x","y","positionProps","setDimensions","padding","offset","setFade","right","setHeight","slickSetOption","item","arguments","opt","bodyStyle","body","style","WebkitTransition","MozTransition","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","transform","allSlides","remainder","evenCoef","infiniteCount","clone","toggle","targetElement","parents","sync","animSlide","oldSlide","slideLeft","navTarget","hide","swipeDirection","xDist","yDist","r","swipeAngle","startX","curX","startY","curY","atan2","round","PI","swipeEnd","swipeLength","edgeHit","minSwipe","fingerCount","originalEvent","touches","swipeStart","swipeMove","curLeft","positionOffset","verticalSwipeLength","pageX","clientX","pageY","clientY","sqrt","pow","unfilterSlides","slickUnfilter","fromBreakpoint","fn","ret","args","Array"],"mappings":"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","file":"js/chunk-2922.b2eebb5b.js","sourcesContent":["import axios from 'axios';\n\nexport default\n    axios.create({\n        baseURL: 'http://reactify.theironnetwork.org/data/'\n    });","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n<script>\nimport Vue from 'vue';\nimport $ from 'jquery';\n\n// Check if the request came from the browser and is not server rendered\nif (typeof window !== 'undefined') {\n  const slick = require('slick-carousel')\n}\n\nexport default {\n  props: {\n    options: {\n      type: Object,\n      default: function() {\n        return {};\n      },\n    },\n  },\n\n  mounted: function() {\n    this.create();\n  },\n\n  destroyed: function() {\n    $(this.$el).slick('unslick');\n  },\n\n  methods: {\n    create: function() {\n      const $slick = $(this.$el);\n\n      $slick.on('afterChange', this.onAfterChange);\n      $slick.on('beforeChange', this.onBeforeChange);\n      $slick.on('breakpoint', this.onBreakpoint);\n      $slick.on('destroy', this.onDestroy);\n      $slick.on('edge', this.onEdge);\n      $slick.on('init', this.onInit);\n      $slick.on('reInit', this.onReInit);\n      $slick.on('setPosition', this.onSetPosition);\n      $slick.on('swipe', this.onSwipe);\n      $slick.on('lazyLoaded', this.onLazyLoaded);\n      $slick.on('lazyLoadError', this.onLazyLoadError);\n\n      $slick.slick(this.options);\n    },\n\n    destroy: function() {\n      const $slick = $(this.$el);\n\n      $slick.off('afterChange', this.onAfterChange);\n      $slick.off('beforeChange', this.onBeforeChange);\n      $slick.off('breakpoint', this.onBreakpoint);\n      $slick.off('destroy', this.onDestroy);\n      $slick.off('edge', this.onEdge);\n      $slick.off('init', this.onInit);\n      $slick.off('reInit', this.onReInit);\n      $slick.off('setPosition', this.onSetPosition);\n      $slick.off('swipe', this.onSwipe);\n      $slick.off('lazyLoaded', this.onLazyLoaded);\n      $slick.off('lazyLoadError', this.onLazyLoadError);\n      $(this.$el).slick('unslick');\n    },\n\n    reSlick: function() {\n      this.destroy();\n      this.create();\n    },\n\n    next: function() {\n      $(this.$el).slick('slickNext');\n    },\n\n    prev: function() {\n      $(this.$el).slick('slickPrev');\n    },\n\n    pause: function() {\n      $(this.$el).slick('slickPause');\n    },\n\n    play: function() {\n      $(this.$el).slick('slickPlay');\n    },\n\n    goTo: function(index, dontAnimate) {\n      $(this.$el).slick('slickGoTo', index, dontAnimate);\n    },\n\n    currentSlide: function() {\n      return $(this.$el).slick('slickCurrentSlide');\n    },\n\n    add: function(element, index, addBefore) {\n      $(this.$el).slick('slickAdd', element, index, addBefore);\n    },\n\n    remove: function(index, removeBefore) {\n      $(this.$el).slick('slickRemove', index, removeBefore);\n    },\n\n    filter: function(filterData) {\n      $(this.$el).slick('slickFilter', filterData);\n    },\n\n    unfilter: function() {\n      $(this.$el).slick('slickUnfilter');\n    },\n\n    getOption: function(option) {\n      $(this.$el).slick('slickGetOption', option);\n    },\n\n    setOption: function(option, value, refresh) {\n      $(this.$el).slick('slickSetOption', option, value, refresh);\n    },\n\n    setPosition: function() {\n      $(this.$el).slick('setPosition');\n    },\n\n    // Events\n    onAfterChange: function(event, slick, currentSlide) {\n      this.$emit('afterChange', event, slick, currentSlide);\n    },\n\n    onBeforeChange: function(event, slick, currentSlide, nextSlide) {\n      this.$emit('beforeChange', event, slick, currentSlide, nextSlide);\n    },\n\n    onBreakpoint: function(event, slick, breakpoint) {\n      this.$emit('breakpoint', event, slick, breakpoint);\n    },\n\n    onDestroy: function(event, slick) {\n      this.$emit('destroy', event, slick);\n    },\n\n    onEdge: function(event, slick, direction) {\n      this.$emit('edge', event, slick, direction);\n    },\n\n    onInit: function(event, slick) {\n      this.$emit('init', event, slick);\n    },\n\n    onReInit: function(event, slick) {\n      this.$emit('reInit', event, slick);\n    },\n\n    onSetPosition: function(event, slick) {\n      this.$emit('setPosition', event, slick);\n    },\n\n    onSwipe: function(event, slick, direction) {\n      this.$emit('swipe', event, slick, direction);\n    },\n\n    onLazyLoaded: function(event, slick, image, imageSource) {\n      this.$emit('lazyLoaded', event, slick, image, imageSource);\n    },\n\n    onLazyLoadError: function(event, slick, image, imageSource) {\n      this.$emit('lazyLoadError', event, slick, image, imageSource);\n    },\n  },\n\n};\n</script>\n\n","import mod from \"-!../cache-loader/dist/cjs.js??ref--12-0!../thread-loader/dist/cjs.js!../babel-loader/lib/index.js!../vue-loader/lib/index.js??vue-loader-options!./slickCarousel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../cache-loader/dist/cjs.js??ref--12-0!../thread-loader/dist/cjs.js!../babel-loader/lib/index.js!../vue-loader/lib/index.js??vue-loader-options!./slickCarousel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./slickCarousel.vue?vue&type=template&id=3f6f7688&\"\nimport script from \"./slickCarousel.vue?vue&type=script&lang=js&\"\nexport * from \"./slickCarousel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"slickCarousel.vue\"\nexport default component.exports","/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.8.1\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n;(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this, dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>',\n                nextArrow: '<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return $('<button type=\"button\" />').text(i + 1);\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                focusOnChange: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnFocus: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                useTransform: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                scrolling: false,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                swiping: false,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.focussed = false;\n            _.interrupted = false;\n            _.hidden = 'hidden';\n            _.paused = true;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n            _.registerBreakpoints();\n            _.init(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.activateADA = function() {\n        var _ = this;\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n    };\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function() {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.getNavTarget = function() {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if ( asNavFor && asNavFor !== null ) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        return asNavFor;\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n\n        var _ = this,\n            asNavFor = _.getNavTarget();\n\n        if ( asNavFor !== null && typeof asNavFor === 'object' ) {\n            asNavFor.each(function() {\n                var target = $(this).slick('getSlick');\n                if(!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        if ( _.slideCount > _.options.slidesToShow ) {\n            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this,\n            slideTo = _.currentSlide + _.options.slidesToScroll;\n\n        if ( !_.paused && !_.interrupted && !_.focussed ) {\n\n            if ( _.options.infinite === false ) {\n\n                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n                    _.direction = 0;\n                }\n\n                else if ( _.direction === 0 ) {\n\n                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\n                    if ( _.currentSlide - 1 === 0 ) {\n                        _.direction = 1;\n                    }\n\n                }\n\n            }\n\n            _.slideHandler( slideTo );\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true ) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if( _.slideCount > _.options.slidesToShow ) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow\n                        .addClass('slick-disabled')\n                        .attr('aria-disabled', 'true');\n                }\n\n            } else {\n\n                _.$prevArrow.add( _.$nextArrow )\n\n                    .addClass('slick-hidden')\n                    .attr({\n                        'aria-disabled': 'true',\n                        'tabindex': '-1'\n                    });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dot;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$slider.addClass('slick-dotted');\n\n            dot = $('<ul />').addClass(_.options.dotsClass);\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n            }\n\n            _.$dots = dot.appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slider\n                .children( _.options.slide + ':not(.slick-cloned)')\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element)\n                .attr('data-slick-index', index)\n                .data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.buildRows = function() {\n\n        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if(_.options.rows > 0) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(\n                originalSlides.length / slidesPerSection\n            );\n\n            for(a = 0; a < numOfSlides; a++){\n                var slide = document.createElement('div');\n                for(b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for(c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.empty().append(newSlides);\n            _.$slider.children().children().children()\n                .css({\n                    'width':(100 / _.options.slidesPerRow) + '%',\n                    'display': 'inline-block'\n                });\n\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if ( _.options.responsive &&\n            _.options.responsive.length &&\n            _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if( !initial && triggerBreakpoint !== false ) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.currentTarget),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        if($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if(!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this,\n            navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots)\n                .off('click.slick', _.changeSlide)\n                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n            if (_.options.accessibility === true) {\n                _.$dots.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$slider.off('focus.slick blur.slick');\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);\n                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.cleanUpSlideEvents();\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.cleanUpSlideEvents = function() {\n\n        var _ = this;\n\n        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n    };\n\n    Slick.prototype.cleanUpRows = function() {\n\n        var _ = this, originalSlides;\n\n        if(_.options.rows > 0) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.empty().append(originalSlides);\n        }\n\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function(refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if ( _.$prevArrow && _.$prevArrow.length ) {\n\n            _.$prevArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.prevArrow )) {\n                _.$prevArrow.remove();\n            }\n        }\n\n        if ( _.$nextArrow && _.$nextArrow.length ) {\n\n            _.$nextArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.nextArrow )) {\n                _.$nextArrow.remove();\n            }\n        }\n\n\n        if (_.$slides) {\n\n            _.$slides\n                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n                .removeAttr('aria-hidden')\n                .removeAttr('data-slick-index')\n                .each(function(){\n                    $(this).attr('style', $(this).data('originalStyling'));\n                });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n        _.$slider.removeClass('slick-dotted');\n\n        _.unslicked = true;\n\n        if(!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.fadeSlideOut = function(slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.$slidesCache = _.$slides;\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.focusHandler = function() {\n\n        var _ = this;\n\n        _.$slider\n            .off('focus.slick blur.slick')\n            .on('focus.slick blur.slick', '*', function(event) {\n\n            event.stopImmediatePropagation();\n            var $sf = $(this);\n\n            setTimeout(function() {\n\n                if( _.options.pauseOnFocus ) {\n                    _.focussed = $sf.is(':focus');\n                    _.autoPlay();\n                }\n\n            }, 0);\n\n        });\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            if (_.slideCount <= _.options.slidesToShow) {\n                 ++pagerQty;\n            } else {\n                while (breakPoint < _.slideCount) {\n                    ++pagerQty;\n                    breakPoint = counter + _.options.slidesToScroll;\n                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n                }\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else if(!_.options.asNavFor) {\n            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n        }else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide,\n            coef;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                coef = -1\n\n                if (_.options.vertical === true && _.options.centerMode === true) {\n                    if (_.options.slidesToShow === 2) {\n                        coef = -1.5;\n                    } else if (_.options.slidesToShow === 1) {\n                        coef = -2\n                    }\n                }\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);\n        } else if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            if (_.options.rtl === true) {\n                if (targetSlide[0]) {\n                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                } else {\n                    targetLeft =  0;\n                }\n            } else {\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n            }\n\n            if (_.options.centerMode === true) {\n                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n\n                if (_.options.rtl === true) {\n                    if (targetSlide[0]) {\n                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                    } else {\n                        targetLeft =  0;\n                    }\n                } else {\n                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                }\n\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this,\n            slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide) {\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function(creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n            _.checkResponsive(true);\n            _.focusHandler();\n\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n\n        if ( _.options.autoplay ) {\n\n            _.paused = false;\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.initADA = function() {\n        var _ = this,\n                numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),\n                tabControlIndexes = _.getNavigableIndexes().filter(function(val) {\n                    return (val >= 0) && (val < _.slideCount);\n                });\n\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        if (_.$dots !== null) {\n            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n                var slideControlIndex = tabControlIndexes.indexOf(i);\n\n                $(this).attr({\n                    'role': 'tabpanel',\n                    'id': 'slick-slide' + _.instanceUid + i,\n                    'tabindex': -1\n                });\n\n                if (slideControlIndex !== -1) {\n                   var ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex\n                   if ($('#' + ariaButtonControl).length) {\n                     $(this).attr({\n                         'aria-describedby': ariaButtonControl\n                     });\n                   }\n                }\n            });\n\n            _.$dots.attr('role', 'tablist').find('li').each(function(i) {\n                var mappedSlideIndex = tabControlIndexes[i];\n\n                $(this).attr({\n                    'role': 'presentation'\n                });\n\n                $(this).find('button').first().attr({\n                    'role': 'tab',\n                    'id': 'slick-slide-control' + _.instanceUid + i,\n                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,\n                    'aria-label': (i + 1) + ' of ' + numDotGroups,\n                    'aria-selected': null,\n                    'tabindex': '-1'\n                });\n\n            }).eq(_.currentSlide).find('button').attr({\n                'aria-selected': 'true',\n                'tabindex': '0'\n            }).end();\n        }\n\n        for (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {\n          if (_.options.focusOnChange) {\n            _.$slides.eq(i).attr({'tabindex': '0'});\n          } else {\n            _.$slides.eq(i).removeAttr('tabindex');\n          }\n        }\n\n        _.activateADA();\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'previous'\n               }, _.changeSlide);\n            _.$nextArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'next'\n               }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow.on('keydown.slick', _.keyHandler);\n                _.$nextArrow.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$dots.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {\n\n            $('li', _.$dots)\n                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initSlideEvents = function() {\n\n        var _ = this;\n\n        if ( _.options.pauseOnHover ) {\n\n            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n        _.initSlideEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(_.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n         //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'next' :  'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'previous' : 'next'\n                    }\n                });\n            }\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n\n            $('img[data-lazy]', imagesScope).each(function() {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageSrcSet = $(this).attr('data-srcset'),\n                    imageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function() {\n\n                    image\n                        .animate({ opacity: 0 }, 100, function() {\n\n                            if (imageSrcSet) {\n                                image\n                                    .attr('srcset', imageSrcSet );\n\n                                if (imageSizes) {\n                                    image\n                                        .attr('sizes', imageSizes );\n                                }\n                            }\n\n                            image\n                                .attr('src', imageSource)\n                                .animate({ opacity: 1 }, 200, function() {\n                                    image\n                                        .removeAttr('data-lazy data-srcset data-sizes')\n                                        .removeClass('slick-loading');\n                                });\n                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n                        });\n\n                };\n\n                imageToLoad.onerror = function() {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                };\n\n                imageToLoad.src = imageSource;\n\n            });\n\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n\n        if (_.options.lazyLoad === 'anticipated') {\n            var prevSlide = rangeStart - 1,\n                nextSlide = rangeEnd,\n                $slides = _.$slider.find('.slick-slide');\n\n            for (var i = 0; i < _.options.slidesToScroll; i++) {\n                if (prevSlide < 0) prevSlide = _.slideCount - 1;\n                loadRange = loadRange.add($slides.eq(prevSlide));\n                loadRange = loadRange.add($slides.eq(nextSlide));\n                prevSlide--;\n                nextSlide++;\n            }\n        }\n\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.orientationChange = function() {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.autoPlay();\n        _.options.autoplay = true;\n        _.paused = false;\n        _.focussed = false;\n        _.interrupted = false;\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        if( !_.unslicked ) {\n\n            _.$slider.trigger('afterChange', [_, index]);\n\n            _.animating = false;\n\n            if (_.slideCount > _.options.slidesToShow) {\n                _.setPosition();\n            }\n\n            _.swipeLeft = null;\n\n            if ( _.options.autoplay ) {\n                _.autoPlay();\n            }\n\n            if (_.options.accessibility === true) {\n                _.initADA();\n\n                if (_.options.focusOnChange) {\n                    var $currentSlide = $(_.$slides.get(_.currentSlide));\n                    $currentSlide.attr('tabindex', 0).focus();\n                }\n            }\n\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.preventDefault = function(event) {\n\n        event.preventDefault();\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n        tryCount = tryCount || 1;\n\n        var _ = this,\n            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n            image,\n            imageSource,\n            imageSrcSet,\n            imageSizes,\n            imageToLoad;\n\n        if ( $imgsToLoad.length ) {\n\n            image = $imgsToLoad.first();\n            imageSource = image.attr('data-lazy');\n            imageSrcSet = image.attr('data-srcset');\n            imageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');\n            imageToLoad = document.createElement('img');\n\n            imageToLoad.onload = function() {\n\n                if (imageSrcSet) {\n                    image\n                        .attr('srcset', imageSrcSet );\n\n                    if (imageSizes) {\n                        image\n                            .attr('sizes', imageSizes );\n                    }\n                }\n\n                image\n                    .attr( 'src', imageSource )\n                    .removeAttr('data-lazy data-srcset data-sizes')\n                    .removeClass('slick-loading');\n\n                if ( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n\n                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n                _.progressiveLazyLoad();\n\n            };\n\n            imageToLoad.onerror = function() {\n\n                if ( tryCount < 3 ) {\n\n                    /**\n                     * try to load the image 3 times,\n                     * leave a slight delay so we don't get\n                     * servers blocking the request.\n                     */\n                    setTimeout( function() {\n                        _.progressiveLazyLoad( tryCount + 1 );\n                    }, 500 );\n\n                } else {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                    _.progressiveLazyLoad();\n\n                }\n\n            };\n\n            imageToLoad.src = imageSource;\n\n        } else {\n\n            _.$slider.trigger('allImagesLoaded', [ _ ]);\n\n        }\n\n    };\n\n    Slick.prototype.refresh = function( initializing ) {\n\n        var _ = this, currentSlide, lastVisibleIndex;\n\n        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n        // in non-infinite sliders, we don't want to go past the\n        // last visible index.\n        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n            _.currentSlide = lastVisibleIndex;\n        }\n\n        // if less slides than to show, go to start.\n        if ( _.slideCount <= _.options.slidesToShow ) {\n            _.currentSlide = 0;\n\n        }\n\n        currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if( !initializing ) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n\n        }\n\n    };\n\n    Slick.prototype.registerBreakpoints = function() {\n\n        var _ = this, breakpoint, currentBreakpoint, l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for ( breakpoint in responsiveSettings ) {\n\n                l = _.breakpoints.length-1;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while( l >= 0 ) {\n                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n                            _.breakpoints.splice(l,1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n                }\n\n            }\n\n            _.breakpoints.sort(function(a, b) {\n                return ( _.options.mobileFirst ) ? a-b : b-a;\n            });\n\n        }\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slideTrack\n                .children(_.options.slide)\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n        _.cleanUpSlideEvents();\n        _.initSlideEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        _.setPosition();\n        _.focusHandler();\n\n        _.paused = !_.options.autoplay;\n        _.autoPlay();\n\n        _.$slider.trigger('reInit', [_]);\n\n    };\n\n    Slick.prototype.resize = function() {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function() {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if( !_.unslicked ) { _.setPosition(); }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {},\n            x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption =\n    Slick.prototype.slickSetOption = function() {\n\n        /**\n         * accepts arguments in format of:\n         *\n         *  - for changing a single option's value:\n         *     .slick(\"setOption\", option, value, refresh )\n         *\n         *  - for changing a set of responsive options:\n         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n         *\n         *  - for updating multiple values at once (not responsive)\n         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n         */\n\n        var _ = this, l, item, option, value, refresh = false, type;\n\n        if( $.type( arguments[0] ) === 'object' ) {\n\n            option =  arguments[0];\n            refresh = arguments[1];\n            type = 'multiple';\n\n        } else if ( $.type( arguments[0] ) === 'string' ) {\n\n            option =  arguments[0];\n            value = arguments[1];\n            refresh = arguments[2];\n\n            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n                type = 'responsive';\n\n            } else if ( typeof arguments[1] !== 'undefined' ) {\n\n                type = 'single';\n\n            }\n\n        }\n\n        if ( type === 'single' ) {\n\n            _.options[option] = value;\n\n\n        } else if ( type === 'multiple' ) {\n\n            $.each( option , function( opt, val ) {\n\n                _.options[opt] = val;\n\n            });\n\n\n        } else if ( type === 'responsive' ) {\n\n            for ( item in value ) {\n\n                if( $.type( _.options.responsive ) !== 'array' ) {\n\n                    _.options.responsive = [ value[item] ];\n\n                } else {\n\n                    l = _.options.responsive.length-1;\n\n                    // loop through the responsive object and splice out duplicates.\n                    while( l >= 0 ) {\n\n                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n                            _.options.responsive.splice(l,1);\n\n                        }\n\n                        l--;\n\n                    }\n\n                    _.options.responsive.push( value[item] );\n\n                }\n\n            }\n\n        }\n\n        if ( refresh ) {\n\n            _.unload();\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if ( _.options.fade ) {\n            if ( typeof _.options.zIndex === 'number' ) {\n                if( _.options.zIndex < 3 ) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        allSlides = _.$slider\n            .find('.slick-slide')\n            .removeClass('slick-active slick-center slick-current')\n            .attr('aria-hidden', 'true');\n\n        _.$slides\n            .eq(index)\n            .addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n                    _.$slides\n                        .slice(index - centerOffset + evenCoef, index + centerOffset + 1)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides\n                        .slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n                if (index === 0) {\n\n                    allSlides\n                        .eq(allSlides.length - 1 - _.options.slidesToShow)\n                        .addClass('slick-center');\n\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides\n                        .eq(_.options.slidesToShow)\n                        .addClass('slick-center');\n\n                }\n\n            }\n\n            _.$slides\n                .eq(index)\n                .addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n                _.$slides\n                    .slice(index, index + _.options.slidesToShow)\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n                    allSlides\n                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    allSlides\n                        .slice(indexOffset, indexOffset + _.options.slidesToShow)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {\n            _.lazyLoad();\n        }\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                        infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex - _.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount  + _.slideCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex + _.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.interrupt = function( toggle ) {\n\n        var _ = this;\n\n        if( !toggle ) {\n            _.autoPlay();\n        }\n        _.interrupted = toggle;\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n\n        var targetElement =\n            $(event.target).is('.slick-slide') ?\n                $(event.target) :\n                $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.slideHandler(index, false, true);\n            return;\n\n        }\n\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this, navTarget;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if ( _.options.autoplay ) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        if ( _.options.asNavFor ) {\n\n            navTarget = _.getNavTarget();\n            navTarget = navTarget.slick('getSlick');\n\n            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n                navTarget.setSlideClasses(_.currentSlide);\n            }\n\n        }\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n        if (_.options.verticalSwiping === true) {\n            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n                return 'down';\n            } else {\n                return 'up';\n            }\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this,\n            slideCount,\n            direction;\n\n        _.dragging = false;\n        _.swiping = false;\n\n        if (_.scrolling) {\n            _.scrolling = false;\n            return false;\n        }\n\n        _.interrupted = false;\n        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n        if ( _.touchObject.curX === undefined ) {\n            return false;\n        }\n\n        if ( _.touchObject.edgeHit === true ) {\n            _.$slider.trigger('edge', [_, _.swipeDirection() ]);\n        }\n\n        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n            direction = _.swipeDirection();\n\n            switch ( direction ) {\n\n                case 'left':\n                case 'down':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n                            _.currentSlide + _.getSlideCount();\n\n                    _.currentDirection = 0;\n\n                    break;\n\n                case 'right':\n                case 'up':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n                            _.currentSlide - _.getSlideCount();\n\n                    _.currentDirection = 1;\n\n                    break;\n\n                default:\n\n\n            }\n\n            if( direction != 'vertical' ) {\n\n                _.slideHandler( slideCount );\n                _.touchObject = {};\n                _.$slider.trigger('swipe', [_, direction ]);\n\n            }\n\n        } else {\n\n            if ( _.touchObject.startX !== _.touchObject.curX ) {\n\n                _.slideHandler( _.currentSlide );\n                _.touchObject = {};\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options\n                .touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        verticalSwipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n\n        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {\n            _.scrolling = true;\n            return false;\n        }\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = verticalSwipeLength;\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            _.swiping = true;\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        _.interrupted = true;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides\n            .removeClass('slick-slide slick-active slick-visible slick-current')\n            .attr('aria-hidden', 'true')\n            .css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function(fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if ( _.options.arrows === true &&\n            _.slideCount > _.options.slidesToShow &&\n            !_.options.infinite ) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots\n                .find('li')\n                    .removeClass('slick-active')\n                    .end();\n\n            _.$dots\n                .find('li')\n                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n                .addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if ( _.options.autoplay ) {\n\n            if ( document[_.hidden] ) {\n\n                _.interrupted = true;\n\n            } else {\n\n                _.interrupted = false;\n\n            }\n\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick = new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n"],"sourceRoot":""}